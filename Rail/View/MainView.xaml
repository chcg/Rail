<mvvm:FileRibbonView x:Class="Rail.View.MainView"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:v="clr-namespace:Rail.View"    
    xmlns:vm="clr-namespace:Rail.ViewModel"
    xmlns:ctrl="clr-namespace:Rail.Controls"
    xmlns:mvvm="clr-namespace:Rail.Mvvm;assembly=Rail.Mvvm"
    xmlns:conv="clr-namespace:Rail.Converter"
    xmlns:lang="clr-namespace:Rail.Properties;assembly=Rail"
    xmlns:en="clr-namespace:Rail.Enums"
    xmlns:mvvmconv="clr-namespace:Rail.Mvvm.Converter;assembly=Rail.Mvvm"
    xmlns:local="clr-namespace:Rail.View" 
    mc:Ignorable="d"
    Height="1000" 
    Width="1600" 
    Icon="/Rail;component/Images/Rail.png">
    <RibbonWindow.Resources>
        <conv:TaskbarItemProgressStateToVisibilityConverter x:Key="TaskbarItemProgressStateToVisibilityConverter"/>
        <conv:DoubleToPercentageConverter x:Key="DoubleToPercentageConverter"/>
        <conv:DistanceToTextConverter x:Key="DistanceToTextConverter"/>
        <conv:AngelToTextConverter x:Key="AngelToTextConverter"/>
        <conv:PointToTextConverter x:Key="PointToTextConverter"/>
        <conv:BooleanToVisibilityCollapsedConverter x:Key="BooleanToVisibilityCollapsedConverter"/>
        <conv:LayerToTextConverter x:Key="LayerToTextConverter"/>
        <conv:TrackRailViewModeToVisibilityConverter x:Key="TrackRailViewModeToVisibilityConverter"/>
        <conv:TerrainViewModeToVisibilityConverter x:Key="TerrainViewModeToVisibilityConverter"/>
        <conv:GuidToLayerConverter x:Key="GuidToLayerConverter"/>
        <conv:ReferensNullToVisibilityCollapsedConverter x:Key="ReferensNullToVisibilityCollapsedConverter"/>
        <mvvmconv:RadioButtonConverter x:Key="RadioButtonConverter"/>
        <mvvmconv:EnumToVisibilityConverter x:Key="EnumToVisibilityConverter"/>
    </RibbonWindow.Resources>
    <DockPanel>
        <mvvm:PersistentRibbon DockPanel.Dock="Top">
            <Ribbon.ApplicationMenu>
                <RibbonApplicationMenu SmallImageSource="/Rail;component/Images/Rail.png" ToolTip="{Binding Title}">
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFileNew}" ImageSource="/Rail;component/Images/New.png" QuickAccessToolBarImageSource="/Rail;component/Images/New.png" Command="{Binding NewCommand}"/>
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFileOpen}" ImageSource="/Rail;component/Images/Open.png" QuickAccessToolBarImageSource="/Rail;component/Images/Open.png" Command="{Binding OpenCommand}"/>
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFileSave}" ImageSource="/Rail;component/Images/Save.png" QuickAccessToolBarImageSource="/Rail;component/Images/Save.png" Command="{Binding SaveCommand}"/>
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFileSaveAs}" ImageSource="/Rail;component/Images/Save.png" QuickAccessToolBarImageSource="/Rail;component/Images/Save.png" Command="{Binding SaveAsCommand}"/>
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFilePrint}" ImageSource="/Rail;component/Images/Printer.png" QuickAccessToolBarImageSource="/Rail;component/Images/Printer.png" Command="{Binding PrintCommand}"/>
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFilePrintPreview}" ImageSource="/Rail;component/Images/Printer.png" QuickAccessToolBarImageSource="/Rail;component/Images/Printer.png" Command="{Binding PrintPreviewCommand}"/>
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFileHelp}" ImageSource="/Rail;component/Images/Help.png" QuickAccessToolBarImageSource="/Rail;component/Images/Help.png" Command="{Binding HelpCommand}"/>
                    <RibbonApplicationMenuItem Header="{x:Static lang:Resources.MainFileAbout}" ImageSource="/Rail;component/Images/Info.png" QuickAccessToolBarImageSource="/Rail;component/Images/Info.png" Command="{Binding AboutCommand}"/>
                    
                    <RibbonApplicationMenu.FooterPaneContent>
                        <RibbonButton Label="{x:Static lang:Resources.MainFileExit}" HorizontalAlignment="Right" Command="{Binding ExitCommand}" />
                    </RibbonApplicationMenu.FooterPaneContent>
                    <RibbonApplicationMenu.AuxiliaryPaneContent>
                        <RibbonGallery CanUserFilter="False" ScrollViewer.VerticalScrollBarVisibility="Auto" >
                            <RibbonGalleryCategory ItemsSource="{Binding RecentFiles}" MaxColumnCount="1" ColumnsStretchToFill="True" IsSharedColumnSizeScope="True" Header="{x:Static lang:Resources.MainFileRecentFiles}">
                                <RibbonGalleryCategory.ItemTemplate>
                                    <DataTemplate>
                                        <RibbonApplicationMenuItem
                                            Command="{Binding Path=DataContext.RecentFileCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type mvvm:FileRibbonView}}}" 
                                            CommandParameter="{Binding Path}"
                                            ToolTip="{Binding Path}" 
                                            ImageSource="{Binding Image}"
                                            CanAddToQuickAccessToolBarDirectly="False" >
                                            <RibbonApplicationMenuItem.Header>
                                                <TextBlock Text="{Binding Name}" />
                                            </RibbonApplicationMenuItem.Header>
                                        </RibbonApplicationMenuItem>
                                    </DataTemplate>
                                </RibbonGalleryCategory.ItemTemplate>
                            </RibbonGalleryCategory>
                        </RibbonGallery>
                    </RibbonApplicationMenu.AuxiliaryPaneContent>
                </RibbonApplicationMenu>
            </Ribbon.ApplicationMenu>
            <Ribbon.HelpPaneContent>
                <StackPanel Orientation="Horizontal">
                    <RibbonButton Label="{x:Static lang:Resources.MainFileAbout}" Command="{Binding AboutCommand}" SmallImageSource="/Rail;component/Images/Info.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainFileHelp}" Command="{Binding HelpCommand}" SmallImageSource="/Rail;component/Images/Help.png" />
                </StackPanel>
            </Ribbon.HelpPaneContent>
            <RibbonTab Header="{x:Static lang:Resources.MainPlan}">
                <RibbonGroup Header="{x:Static lang:Resources.MainTracks}">
                    <RibbonButton Label="{x:Static lang:Resources.MainRailPlan}" Command="{Binding RailPlanCommand}" LargeImageSource="/Rail;component/Images/Settings.png" />
                </RibbonGroup>
                <RibbonGroup Header="{x:Static lang:Resources.MainHistory}" SmallImageSource="/Rail;component/Images/Clipboard.png" LargeImageSource="/Rail;component/Images/Clipboard.png" >
                    <RibbonButton Label="{x:Static lang:Resources.MainUndo}" Command="{Binding UndoCommand}" SmallImageSource="/Rail;component/Images/Undo.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainRedo}" Command="{Binding RedoCommand}" SmallImageSource="/Rail;component/Images/Redo.png" />
                </RibbonGroup>
                <RibbonGroup Header="{x:Static lang:Resources.MainClipboard}" SmallImageSource="/Rail;component/Images/Clipboard.png" LargeImageSource="/Rail;component/Images/Clipboard.png" >
                    <RibbonButton Label="{x:Static lang:Resources.MainCopy}" Command="{Binding CopyCommand}" SmallImageSource="/Rail;component/Images/Copy.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainCut}" Command="{Binding CutCommand}" SmallImageSource="/Rail;component/Images/Cut.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainPaste}" Command="{Binding PasteCommand}" SmallImageSource="/Rail;component/Images/Paste.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainDelete}" Command="{Binding DeleteCommand}" SmallImageSource="/Rail;component/Images/delete.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainDuplicate}" Command="{Binding DuplicateCommand}" SmallImageSource="/Rail;component/Images/Copy.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainSelectAll}" Command="{Binding SelectAllCommand}" SmallImageSource="/Rail;component/Images/Copy.png" />
                </RibbonGroup>
                <RibbonGroup Header="{x:Static lang:Resources.MainViewTitle}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="80"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                            <RowDefinition Height="22"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0" Grid.Row="0" Content="{x:Static lang:Resources.MainViewSnapInDistance}" Margin="0,-2,0,-2" />
                        <ComboBox Grid.Column="1" Grid.Row="0" ItemsSource="{Binding SnapInDistances}" SelectedValue="{Binding SnapInDistance}" Background="White" Margin="1" >
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding .,Converter={StaticResource  DistanceToTextConverter}}" HorizontalAlignment="Stretch"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Label Grid.Column="0" Grid.Row="1"  Content="{x:Static lang:Resources.MainViewSnapInAngle}" Margin="0,-2,0,-2"/>
                        <ComboBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding SnapInAngels}" SelectedValue="{Binding SnapInAngel}" Background="White" Margin="1" >
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding .,Converter={StaticResource AngelToTextConverter}}" HorizontalAlignment="Stretch"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                        <Label Grid.Column="0" Grid.Row="2" Content="{x:Static lang:Resources.MainViewGridDistance}" Margin="0,-2,0,-2"/>
                        <ComboBox Grid.Column="1" Grid.Row="2" ItemsSource="{Binding GridLinesDistances}" SelectedValue="{Binding GridLinesDistance}" Background="White" Margin="1" >
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding .,Converter={StaticResource DistanceToTextConverter}}" HorizontalAlignment="Stretch"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </RibbonGroup>
                <RibbonGroup Header="{x:Static lang:Resources.MainTracks}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="60"/>
                            <ColumnDefinition Width="60"/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="Auto"/>
                        </Grid.RowDefinitions>
                        <Label Grid.Column="0" Grid.Row="0" Content="{x:Static lang:Resources.MainXmm}"  />
                        <TextBox Grid.Column="1" Grid.Row="0" Text="{Binding SelectedRailsX, StringFormat=0.00}" mvvm:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text" Margin="4" />
                        <Label Grid.Column="0" Grid.Row="1" Content="{x:Static lang:Resources.MainYmm}"  />
                        <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding SelectedRailsY, StringFormat=0.00}" mvvm:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text" Margin="4" />
                        <Label Grid.Column="2" Grid.Row="0" Content="{x:Static lang:Resources.MainAngleDeg}" />
                        <TextBox Grid.Column="3" Grid.Row="0" Text="{Binding SelectedRailsAngle, StringFormat=0.00}" mvvm:InputBindingsManager.UpdatePropertySourceWhenEnterPressed="TextBox.Text" Margin="4" />
                        <Label Grid.Column="2" Grid.Row="1" Content="{x:Static lang:Resources.MainLayer}"  />
                        <ComboBox Grid.Column="3" Grid.ColumnSpan="2" Grid.Row="1" ItemsSource="{Binding Layers}" Margin="4" >
                            <ComboBox.SelectedItem>
                                <mvvm:ConverterBindableBinding Binding="{Binding SelectedRailsLayer, Mode=TwoWay}" Converter="{StaticResource GuidToLayerConverter}" ConverterParameterBinding="{Binding RailPlan}" />
                            </ComboBox.SelectedItem>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Rectangle Fill="{Binding Path=TrackBrush}" Width="12" Height="12" Margin="2" />
                                        <TextBlock Text="{Binding Path=Name}" />
                                    </StackPanel>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </Grid>
                </RibbonGroup>
                <RibbonGroup Header="{x:Static lang:Resources.MainViewModes}">
                    <RibbonControlGroup>
                        <RibbonRadioButton Label="{x:Static lang:Resources.MainTracks}" IsChecked="{Binding ViewMode, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static ctrl:RailViewMode.Tracks}}" LargeImageSource="/Images/List.png" SmallImageSource="/Images/List.png" />
                        <RibbonRadioButton Label="{x:Static lang:Resources.MainRail}" IsChecked="{Binding ViewMode, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static ctrl:RailViewMode.Rail}}" LargeImageSource="/Images/List.png" SmallImageSource="/Images/List.png" />
                        <RibbonRadioButton Label="{x:Static lang:Resources.MainTerrain}" IsChecked="{Binding ViewMode, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static ctrl:RailViewMode.Terrain}}" LargeImageSource="/Images/List.png" SmallImageSource="/Images/List.png" />
                    </RibbonControlGroup>
                </RibbonGroup>

                <RibbonGroup Header="{x:Static lang:Resources.MainLockTitle}">
                    <RibbonButton Label="{x:Static lang:Resources.MainLockLock}" Command="{Binding AnchorCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainLockUnlock}" Command="{Binding UnanchorCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                </RibbonGroup>
                
                <RibbonGroup Header="{x:Static lang:Resources.MainGroupTitle}">
                    <RibbonButton Label="{x:Static lang:Resources.MainGroupCreate}" Command="{Binding CreateGroupCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainGroupResolve}" Command="{Binding ResolveGroupCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainGroupSaveAs}" Command="{Binding SaveAsGroupCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                </RibbonGroup>

                <RibbonGroup Header="{x:Static lang:Resources.MainRampTitle}">
                    <RibbonButton Label="{x:Static lang:Resources.MainRampCreate}" Command="{Binding CreateRampCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainRampDelete}" Command="{Binding DeleteRampCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainRampEdit}" Command="{Binding EditRampCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                </RibbonGroup>

                <RibbonGroup Header="{x:Static lang:Resources.MainHelixTitle}">
                    <RibbonButton Label="{x:Static lang:Resources.MainHelixCreate}" Command="{Binding CreateHelixCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainHelixDelete}" Command="{Binding DeleteHelixCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                    <RibbonButton Label="{x:Static lang:Resources.MainHelixEdit}" Command="{Binding EditHelixCommand}" SmallImageSource="/Rail;component/Images/Settings.png" />
                </RibbonGroup>
            
                <RibbonGroup Header="{x:Static lang:Resources.MainSwitches}">
                    <RibbonToggleButton Label="{x:Static lang:Resources.MainShowTrackList}" IsChecked="{Binding ShowMaterialList}"  SmallImageSource="/Images/List.png" />
                    <RibbonToggleButton Label="{x:Static lang:Resources.MainShowDockingPoints}" IsChecked="{Binding ShowDockingPoints}"  SmallImageSource="/Images/List.png" />
                    <RibbonToggleButton Label="{x:Static lang:Resources.MainShowClearSpace}" IsChecked="{Binding ShowClearSpace}"  SmallImageSource="/Images/List.png" />
                </RibbonGroup>

                

                <RibbonGroup Header="{x:Static lang:Resources.MainTools}">
                    <RibbonButton Label="{x:Static lang:Resources.MainOptions}" Command="{Binding OptionsCommand}" LargeImageSource="/Rail;component/Images/Settings.png" SmallImageSource="/Rail;component/Images/Settings.png" />
                </RibbonGroup>
                
            </RibbonTab>
        </mvvm:PersistentRibbon>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBar.ItemsPanel>
                <ItemsPanelTemplate>
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="16"/>
                        </Grid.ColumnDefinitions>
                    </Grid>
                </ItemsPanelTemplate>
            </StatusBar.ItemsPanel>
            <StatusBarItem Grid.Column="0" Content="{Binding StatusText}" ToolTip="Status."/>
            <StatusBarItem Grid.Column="1">
                <ProgressBar Value="{Binding ProgressValue}" Visibility="{Binding ProgressState, Converter={StaticResource TaskbarItemProgressStateToVisibilityConverter}}" Minimum="0.0" Maximum="1.0" Width="120" Height="18" ToolTip="Working progress."/>
            </StatusBarItem>

            <StatusBarItem Grid.Column="2" Content="{x:Static lang:Resources.MainPosition}" Margin="2,0,2,0"/>
            <StatusBarItem Grid.Column="3" Content="{Binding MousePosition, Converter={StaticResource PointToTextConverter}}" Margin="2,0,2,0"/>

            <StatusBarItem Grid.Column="4" Content="{x:Static lang:Resources.MainRotation}" Margin="2,0,2,0"/>
            <StatusBarItem Grid.Column="5" Margin="2,0,2,0">
                <ctrl:DoubleSlider FormatString="F0" Minimum="-60" Maximum="60" Increment="5" Value="{Binding RotationAngle}" SliderWidth="100" />
            </StatusBarItem>

            <StatusBarItem Grid.Column="6" Content="{x:Static lang:Resources.MainTilt}" Margin="2,0,2,0"/>
            <StatusBarItem Grid.Column="7" Margin="2,0,2,0">
                <ctrl:DoubleSlider FormatString="F0" Minimum="-70" Maximum="-20" Increment="5" Value="{Binding TiltAngle}" SliderWidth="100" />
            </StatusBarItem>

            <StatusBarItem Grid.Column="8" Content="{x:Static lang:Resources.MainZoom}" Margin="2,0,2,0"/>
            <StatusBarItem Grid.Column="9" Margin="2,0,2,0">
                <ctrl:DoubleSlider FormatString="P0" Minimum="0.1" Maximum="2" Increment="0.05" Value="{Binding ZoomFactor}" SliderWidth="100" />
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="300" MinWidth="200" MaxWidth="400"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="300" MinWidth="200" MaxWidth="400"/>
            </Grid.ColumnDefinitions>
            <Grid Grid.Column="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <Grid.Resources>
                    <x:Array Type="en:TrackTypeFilterType" x:Key="ShowFilter">
                        <en:TrackTypeFilterType>Gauge</en:TrackTypeFilterType>
                        <en:TrackTypeFilterType>Manufacturer</en:TrackTypeFilterType>
                    </x:Array>
                </Grid.Resources>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <StackPanel Grid.Row="0" Orientation="Horizontal">
                    <RadioButton Content="{x:Static lang:Resources.MainAll}" IsChecked="{Binding TrackTypeFilterType, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static en:TrackTypeFilterType.All}}" Margin="8"/>
                    <RadioButton Content="{x:Static lang:Resources.MainGauge}" IsChecked="{Binding TrackTypeFilterType, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static en:TrackTypeFilterType.Gauge}}" Margin="8"/>
                    <RadioButton Content="{x:Static lang:Resources.MainManufacturer}" IsChecked="{Binding TrackTypeFilterType, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static en:TrackTypeFilterType.Manufacturer}}" Margin="8"/>
                </StackPanel>
                <ComboBox Grid.Row="1" ItemsSource="{Binding TrackTypeGauges}" SelectedItem="{Binding SelectedTrackTypeGauge}" SelectedIndex="0" MinWidth="200" Margin="8"
                    Visibility="{Binding TrackTypeFilterType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static en:TrackTypeFilterType.Gauge}}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding .}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Grid.Row="1" ItemsSource="{Binding TrackTypeManufacturers}" SelectedItem="{Binding SelectedTrackTypeManufacturer}" SelectedIndex="0" MinWidth="200" Margin="8"
                    Visibility="{Binding TrackTypeFilterType, Converter={StaticResource EnumToVisibilityConverter}, ConverterParameter={x:Static en:TrackTypeFilterType.Manufacturer}}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding .}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <ComboBox Grid.Row="2" ItemsSource="{Binding TrackTypes}" SelectedItem="{Binding SelectedTrackType}" SelectedIndex="0" MinWidth="200" Margin="8">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock Text="{Binding Name}" ToolTip="{Binding Description}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <StackPanel Grid.Row="3" Orientation="Horizontal">
                    <RadioButton Content="{x:Static lang:Resources.MainSingle}" IsChecked="{Binding TrackFilterType, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static en:TrackFilterType.Single}}" Margin="8"/>
                    <RadioButton Content="{x:Static lang:Resources.MainGroup}" IsChecked="{Binding TrackFilterType, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static en:TrackFilterType.Group}}" Margin="8"/>
                    <RadioButton Content="{x:Static lang:Resources.MainCustomer}" IsChecked="{Binding TrackFilterType, Converter={StaticResource RadioButtonConverter}, ConverterParameter={x:Static en:TrackFilterType.Customer}}" Margin="8"/>
                </StackPanel>
                <ListView Grid.Row="4" ItemsSource="{Binding Tracks}" SelectedItem="{Binding SelectedTrack}" SelectedIndex="0" Margin="8,0,8,8">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="LightGray" BorderThickness="1,1,1,1">
                                <Grid ToolTip="{Binding Description}" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="Auto"/>
                                        <RowDefinition Height="Auto"/>
                                    </Grid.RowDefinitions>
                                    <ctrl:TrackControl Grid.Row="0" Track="{Binding .}" ToolTip="{Binding Description}"/>
                                    <TextBlock Grid.Row="1" Text="{Binding Name}" HorizontalAlignment="Center" />
                                </Grid>
                            </Border>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
            </Grid>
            <GridSplitter Grid.Column="0" Background="Blue" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>

            <Grid Grid.Column="1" Margin="0,0,5,0">
                <ScrollViewer Visibility="{Binding ViewMode, Converter={StaticResource TrackRailViewModeToVisibilityConverter}}" Background="DarkGray" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" >
                    <ctrl:RailPlanControl 
                        x:Name="railPlanControl"
                        Background="DarkGray"
                        ZoomFactor="{Binding ZoomFactor}"
                        Rail="{Binding .}"                    
                        MousePosition="{Binding MousePosition, Mode=OneWayToSource}"
                        ViewMode="{Binding ViewMode}" 
                        ShowDockingPoints="{Binding ShowDockingPoints}"
                        GridLinesDistance="{Binding GridLinesDistance}"
                        RailMargin="40"/>
                    <!--
                    RailPlan="{Binding RailPlan}"
                    SelectedTrack="{Binding SelectedTrack}"
                    SelectedTrackType="{Binding SelectedTrackType}"
                    InsertLayer="{Binding SelectedInsertLayer}"
                    -->
                </ScrollViewer>
                <ScrollViewer Visibility="{Binding ViewMode, Converter={StaticResource TerrainViewModeToVisibilityConverter}}">
                    <Viewport3D ClipToBounds="True" ScrollViewer.HorizontalScrollBarVisibility="Auto" ScrollViewer.VerticalScrollBarVisibility="Auto" ScrollViewer.CanContentScroll="True">
                        <Viewport3D.Camera>
                            <PerspectiveCamera Position="0,0,3000" LookDirection="0,0,-1" FieldOfView="60" />
                        </Viewport3D.Camera>
                        <Viewport3D.Children>
                            <ModelVisual3D>
                                <ModelVisual3D.Content>
                                    <DirectionalLight Color="#FFFFFF" Direction="-0.612372,-0.5,-0.612372" />
                                </ModelVisual3D.Content>
                            </ModelVisual3D>
                            <ModelVisual3D>
                                <ModelVisual3D.Content>
                                    <Model3DGroup Children="{Binding Layers3D}">
                                        <!--<GeometryModel3D>
                                        <GeometryModel3D.Geometry>
                                            <MeshGeometry3D 
                                              Positions="{Binding PlatePoint3DCollection}"
                                              Normals="0 0 1  0 0 1  0 0 1  0 0 1"
                                              TextureCoordinates="0 1  1 1  0 0  1 0   "
                                              TriangleIndices="0 1 2  1 3 2" />
                                        </GeometryModel3D.Geometry>
                                        <GeometryModel3D.Material>
                                            <DiffuseMaterial>
                                                <DiffuseMaterial.Brush>
                                                    <ImageBrush ImageSource="{Binding PlateImage}" />
                                                </DiffuseMaterial.Brush>
                                            </DiffuseMaterial>
                                        </GeometryModel3D.Material>
                                        <GeometryModel3D.Transform>
                                            <Transform3DGroup>
                                                <ScaleTransform3D 
                                                ScaleX="{Binding ZoomFactor}" 
                                                ScaleY="{Binding ZoomFactor}" 
                                                ScaleZ="{Binding ZoomFactor}"/>
                                                <RotateTransform3D>
                                                    <RotateTransform3D.Rotation>
                                                        <AxisAngleRotation3D Axis="1,0,0" Angle="{Binding TiltAngle}" />
                                                    </RotateTransform3D.Rotation>
                                                </RotateTransform3D>
                                                <RotateTransform3D>
                                                    <RotateTransform3D.Rotation>
                                                        <AxisAngleRotation3D Axis="0,1,0" Angle="{Binding RotationAngle}" />
                                                    </RotateTransform3D.Rotation>
                                                </RotateTransform3D>
                                            </Transform3DGroup>
                                        </GeometryModel3D.Transform>
                                    </GeometryModel3D>
                                    <GeometryModel3D>
                                        
                                    </GeometryModel3D>-->
                                    </Model3DGroup>

                                </ModelVisual3D.Content>
                            </ModelVisual3D>
                        </Viewport3D.Children>
                    </Viewport3D>
                </ScrollViewer>
            </Grid>

            <GridSplitter Grid.Column="1" Background="Blue" Width="5" HorizontalAlignment="Right" VerticalAlignment="Stretch"/>
            
            <Grid Grid.Column="2" Visibility="{Binding ShowMaterialList, Converter={StaticResource BooleanToVisibilityCollapsedConverter}}" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
                <TabControl>
                    <TabItem Header="{x:Static lang:Resources.MainLayers}">
                        <DataGrid 
                            ItemsSource="{Binding Layers}" 
                            SelectedItem="{Binding InsertLayer}"
                            AutoGenerateColumns="False" 
                            SelectionMode="Single"
                            GridLinesVisibility="None"
                            HeadersVisibility="Column"
                            CanUserResizeColumns="False"
                            CanUserAddRows="False" 
                            CanUserDeleteRows="False"         
                            HorizontalScrollBarVisibility="Disabled"
                            Margin="3">
                            <DataGrid.Resources>
                                <Style TargetType="DataGridRow">
                                    <Style.Resources>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="Blue"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="Blue"/>
                                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey }" Color="White"/>
                                    </Style.Resources>
                                </Style>
                            </DataGrid.Resources>
                            <DataGrid.Columns>
                                <DataGridTemplateColumn Header="{x:Static lang:Resources.MainShow}" Width="Auto">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <CheckBox 
                                            HorizontalAlignment="Center" 
                                            VerticalAlignment="Center" 
                                            IsChecked="{Binding Path=Show, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Checked="OnRefreshRailPlanControl"
                                            Unchecked="OnRefreshRailPlanControl"/>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTemplateColumn Header="{x:Static lang:Resources.MainLayerName}" Width="*" IsReadOnly="True" CanUserReorder="False">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Stretch">
                                                <Rectangle Fill="{Binding Path=TrackBrush}" Width="12" Height="12" Margin="2"/>
                                                <TextBlock Text="{Binding Path=Name}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </TabItem>
                    <TabItem Header="{x:Static lang:Resources.MainMaterialList}">
                        <DataGrid 
                            ItemsSource="{Binding Materials}" 
                            AutoGenerateColumns="False" 
                            SelectionMode="Single"
                            GridLinesVisibility="None" 
                            HeadersVisibility="Column"
                            CanUserResizeColumns="True" 
                            CanUserReorderColumns="False" 
                            CanUserSortColumns="True" 
                            CanUserAddRows="False" 
                            CanUserDeleteRows="False" 
                            HorizontalScrollBarVisibility="Disabled"
                            Margin="3" >
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="#" Binding="{Binding Number}" Width="30" IsReadOnly="True"/>
                                <DataGridTextColumn Header="{x:Static lang:Resources.MainManufacturer}" Binding="{Binding Manufacturer}" Width="60" IsReadOnly="True"/>
                                <DataGridTextColumn Header="{x:Static lang:Resources.MainArticle}" Binding="{Binding Article}" Width="60" IsReadOnly="True"/>
                                <DataGridTextColumn Header="{x:Static lang:Resources.MainName}" Binding="{Binding Name}" Width="*" IsReadOnly="True"/>
                            </DataGrid.Columns>
                            <DataGrid.RowStyle>
                                <Style TargetType="DataGridRow">
                                    <Setter Property="IsHitTestVisible" Value="False"/>
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                </Style>
                            </DataGrid.RowStyle>
                        </DataGrid>
                    </TabItem>
                </TabControl>
            </Grid>
        </Grid>
    </DockPanel>
</mvvm:FileRibbonView>
